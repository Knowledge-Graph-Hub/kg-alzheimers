pipeline {
    agent { label 'monarch-agent-large' }
    environment {
        HOME = "${env.WORKSPACE}"
        PATH = "/opt/poetry/bin:${env.PATH}"
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')        
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
    stages {
        stage('setup') {
            steps {
                sh '''
                    echo "Current directory: $(pwd)"
                    # export PATH=$PATH:$HOME/.local/bin
                    echo "Path: $PATH"
                    
                    # echo $SHELL
                    python3 --version
                    pip --version
                    poetry --version
                  

                    # poetry config experimental.new-installer false
                    poetry install --with dev
                    poetry run which ingest

                '''
            }
        }
        stage('download kg artifacts') {
            steps {
                sh '''
                    mkdir output || true
                    mkdir data || true
                    gsutil -q -m cp -r gs://data-public-monarchinitiative/monarch-kg-dev/latest/* output/
                    gsutil -q -m cp -r gs://monarch-ingest-data-cache/* data/
                    ls -lasdf
                '''
            }
        }
        stage('denormalize') {
            steps {
                sh 'poetry run ingest closure'
            }
        }
        stage('solr') {
            steps {
                sh 'poetry run ingest solr'
            }
        }
        stage('sqlite') {
            steps {
                sh 'poetry run ingest sqlite'
            }
        }
//        stage('upload files') {
//            steps {
//                sh 'scripts/update_latest_release.sh'
//            }
//        }
//        stage('index') {
//            steps {
//                sh '''
//                    echo "Current directory: $(pwd)"
//                    python3 --version
//                    pip --version
//                    export PATH=$HOME/.local/bin:$PATH
//                    echo "Path: $PATH"
//
//                    cd $HOME
//                    mkdir data-public
//                    gcsfuse --implicit-dirs data-public-monarchinitiative data-public

//                    git clone https://github.com/monarch-initiative/monarch-file-server.git
//                    pip install -r monarch-file-server/scripts/requirements.txt
//                    python3 monarch-file-server/scripts/directory_indexer.py --inject monarch-file-server/scripts/directory-index-template.html --directory data-public --prefix https://data.monarchinitiative.org -x
//                '''
//            }
//        }
    }
//    post {
//        always {
        //    sh 'docker rm -f neo || true'
        //    sh 'docker rm my_solr || true'
//        }
//    }
}
